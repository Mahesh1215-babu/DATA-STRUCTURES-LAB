
#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#define STACK_MAX_SIZE 20
int stack[STACK_MAX_SIZE];
int top = -1; 
int isEmpty() {
	return top == -1 ? 1 : 0;
}
void push(int x) {
	if (top < STACK_MAX_SIZE - 1) {
        stack[++top] = x;
    } else {
        printf("Stack overflow\n");
    }
}
int pop() {
	if (!isEmpty()) {
        return stack[top--];
    } else {
        printf("Stack underflow\n");
        //return -1;
		exit(EXIT_FAILURE);
    }
}
void evaluatePostfix(char * e) {
	int num1, num2, result;
    while (*e != '\0') {
        if (isdigit(*e)) {
            push(*e - '0');
        } else {
            num2 = pop();
            num1 = pop();
            switch (*e) {
                case '+':
                    result = num1 + num2;
                    break;
                case '-':
                    result = num1 - num2;
                    break;
                case '*':
                    result = num1 * num2;
                    break;
                case '/':
                    result = num1 / num2;
                    break;
                default:
                    printf("Invalid operator encountered.\n");
                    return;
            }
            push(result);
        }
        e++;
	}
    if (top==0) {
        printf("Evaluated expression: %d\n",pop());
    }else{
        printf("Invalid postfix expression\n");
}
}

   int main(){
       char exp[20];
       char *e,x;
       printf("Postfix expression: ");
       scanf("%s",exp);
       e=exp;
       evaluatePostfix(e);
}
